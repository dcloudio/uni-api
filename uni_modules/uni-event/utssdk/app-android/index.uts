import { Emitter } from '../Emitter.uts'
import { $Emit, $Off, $On, $Once } from '../interface.uts'

const emitter = new Emitter()

export const $on = defineSyncApi<$On>('$on', (eventName, callback) => {
    // TODO EventStopHandler
    emitter.on(eventName, callback)
})

export const $off = defineSyncApi<$Off>('$off', (eventName, callback) => {
    emitter.off(eventName, callback)
})

export const $once = defineSyncApi<$Once>('$once', (eventName, callback) => {
    emitter.once(eventName, callback)
})

export const $emit = defineSyncApi<$Emit>('$emit', (eventName, arg) => {
    // TODO muti args
    emitter.emit(eventName, arg)
})
