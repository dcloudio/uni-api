import { AddPhoneContact, AddPhoneContactOptions, AddPhoneContactSuccess } from '../interface.uts';
import { API_ADD_PHONE_CONTACT, AddPhoneContactApiOptions, AddPhoneContactApiProtocol } from '../protocol.uts';
import { contact } from '@kit.ContactsKit';
import { BusinessError } from '@kit.BasicServicesKit';
import { UTSHarmony } from '@dcloudio/uni-runtime';

export const addPhoneContact: AddPhoneContact = defineAsyncApi<AddPhoneContactOptions, AddPhoneContactSuccess>(
  API_ADD_PHONE_CONTACT,
  (args: AddPhoneContactOptions, executor: ApiExecutor<AddPhoneContactSuccess>) => {
    UTSHarmony.requestSystemPermission(['ohos.permission.WRITE_CONTACTS'], (allRight: boolean) => {
      if (allRight) {
        const {
          photoFilePath,
          nickName = '',
          lastName = '',
          middleName = '',
          firstName = '',
          remark = '',
          mobilePhoneNumber = '',
          weChatNumber,
          addressCountry = '',
          addressState = '',
          addressCity = '',
          addressStreet = '',
          addressPostalCode = '',
          organization = '',
          url = '',
          workPhoneNumber = '',
          workFaxNumber = '',
          hostNumber = '',
          email = '',
          title = '',
          workAddressCountry = '',
          workAddressState = '',
          workAddressCity = '',
          workAddressStreet = '',
          workAddressPostalCode,
          homeFaxNumber = '',
          homePhoneNumber = '',
          homeAddressCountry = '',
          homeAddressState = '',
          homeAddressCity = '',
          homeAddressStreet = '',
          homeAddressPostalCode = ''
        } = args

        const contactInfo: contact.Contact = {
          name: {
            familyName: lastName!,
            middleName: middleName!,
            givenName: firstName!,
            fullName: lastName! + middleName! + firstName!
          },
          nickName: {
            nickName: nickName!
          },
          emails: [{
            email: email!,
            displayName: '邮箱'
          }],
          phoneNumbers: [{
            phoneNumber: homePhoneNumber!,
            labelId: contact.PhoneNumber.NUM_HOME
          }, {
            phoneNumber: mobilePhoneNumber!,
            labelId: contact.PhoneNumber.NUM_MOBILE
          }, {
            phoneNumber: homeFaxNumber!,
            labelId: contact.PhoneNumber.NUM_FAX_HOME
          }, {
            phoneNumber: workFaxNumber!,
            labelId: contact.PhoneNumber.NUM_FAX_WORK
          }, {
            phoneNumber: workPhoneNumber!,
            labelId: contact.PhoneNumber.NUM_WORK
          }, {
            phoneNumber: hostNumber!,
            labelId: contact.PhoneNumber.NUM_COMPANY_MAIN
          }],
          portrait: { uri: photoFilePath! },
          postalAddresses: [{
            city: homeAddressCity!,
            country: homeAddressCountry!,
            postcode: homeAddressPostalCode!,
            street: homeAddressStreet!,
            postalAddress: homeAddressCountry! + homeAddressState! + homeAddressCity + homeAddressStreet,
            labelId: contact.PostalAddress.ADDR_HOME
          }, {
            city: workAddressCity!,
            country: workAddressCountry!,
            postcode: workAddressPostalCode!,
            street: workAddressStreet!,
            postalAddress: workAddressCountry! + workAddressState! + workAddressCity + workAddressStreet,
            labelId: contact.PostalAddress.ADDR_WORK
          }, {
            city: addressCity!,
            country: addressCountry!,
            postcode: addressPostalCode!,
            street: addressStreet!,
            postalAddress: addressCountry! + addressState! + addressCity + addressStreet,
            labelId: contact.PostalAddress.CUSTOM_LABEL
          }],
          websites: [{ website: url! }],
          note: { noteContent: remark! },
          organization: {
            name: organization!,
            title: title!
          }
        }

        contact.addContact(getContext(), contactInfo)
          .then((contactId) => {
            executor.resolve(contactId)
          })
          .catch((err: BusinessError) => {
            executor.reject(err.message)
          })
      } else {
        executor.reject('Permission denied')
      }
    }, () => executor.reject('Permission denied'))
  },
  AddPhoneContactApiProtocol,
  AddPhoneContactApiOptions
) as AddPhoneContact
