/* 引入 interface.uts 文件中定义的变量 */
import { GoogleLoginOptions, GoogleLogin,GoogleLogoutOptions,GoogleLogout, GoogleLoginResult,GoogleLoginUserInfo,GoogleLoginAuthInfo } from '../interface.uts';
/* 引入 unierror.uts 文件中定义的变量 */
import { GoogleLoginFailImpl } from '../unierror';

import GoogleSignIn from 'com.google.android.gms.auth.api.signin.GoogleSignIn';
import GoogleSignInClient from 'com.google.android.gms.auth.api.signin.GoogleSignInClient';
import GoogleSignInOptions from 'com.google.android.gms.auth.api.signin.GoogleSignInOptions';
import GoogleSignInAccount from 'com.google.android.gms.auth.api.signin.GoogleSignInAccount';

import ApiException from 'com.google.android.gms.common.api.ApiException'
import Intent from 'android.content.Intent';
import Activity from "android.app.Activity";

/**
 * 全局缓存 google client
 */
let mGoogleSignInClient:GoogleSignInClient|null = null
/**
 * 请求Intent的flag
 */
const StartGoogleActivityFlag = 0xF32;
/**
 * 返回数据结构封装
 */
function wrapLoginResult(account:GoogleSignInAccount):GoogleLoginResult{
	/**
	 * 封装 auth info
	 */
	let authInfoRet = {
		openid:account.getIdToken(),
		unionid:account.getIdToken(),
		access_token:account.getId(),
		refresh_token:account.getId(),
	} as GoogleLoginAuthInfo
	/**
	 * 封装 user info
	 */
	let userInfoRet = {
		headimgurl:account.getPhotoUrl()!.toString(),
		nickname:account.getDisplayName(),
		email:account.getEmail(),
	} as GoogleLoginUserInfo
	
	let result = {
		userInfo : userInfoRet,
		authResult : authInfoRet
	} as GoogleLoginResult
	
	return result
	
}

/**
 * google logout logic
 */
export const googleLogout : GoogleLogout = function (option : GoogleLogoutOptions) {
	if(mGoogleSignInClient == null){
		const err = new GoogleLoginFailImpl(9010005);
		option.fail?.(err)
		option.complete?.(err)
		return ;
	}
	mGoogleSignInClient!.revokeAccess();
	mGoogleSignInClient!.signOut();
	option.success?.("success");
	option.complete?.("success");
	option.success = null;
	option.complete = null;
	// 每次登出成功，标记当前的状态
	mGoogleSignInClient = null;
}
/**
 * android google login 实现逻辑
 */
export const googleLogin : GoogleLogin = function (options : GoogleLoginOptions) {
	
	if(UTSAndroid.getAppContext() == null){
		const err = new GoogleLoginFailImpl(9010003);
		options.fail?.(err)
		options.complete?.(err)
		return;
	}
	if(UTSAndroid.getUniActivity() == null || UTSAndroid.getUniActivity()!.isFinishing()){
		const err = new GoogleLoginFailImpl(9010003);
		options.fail?.(err)
		options.complete?.(err)
		return;
	}
	
	if(mGoogleSignInClient == null){
		try{
			let gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
			                    .requestEmail()
			                    .build();
		    mGoogleSignInClient = GoogleSignIn.getClient(UTSAndroid.getAppContext()!, gso);
		}catch (e:Exception){
			console.log("init error")
			mGoogleSignInClient = null
		}
	}
	
	if(mGoogleSignInClient == null){
		//  依然初始化失败 todo
		const err = new GoogleLoginFailImpl(9010004);
		options.fail?.(err)
		options.complete?.(err)
		return;
	}
	
	let account = GoogleSignIn.getLastSignedInAccount(UTSAndroid.getAppContext()!);
	if(account != null){
		/**
		 * 存在缓存信息，提前成功
		 */
		let loginResult = wrapLoginResult(account)
		options.success?.(loginResult);
		console.log("success happen ============== 222222222  ")
		options.complete?.(loginResult);
		return
	}
	
	/**
	 * 注册activity 的回调监听
	 */
	UTSAndroid.onAppActivityResult((requestCode : Int, resultCode : Int, data ?: Intent) => {
		if ((requestCode == StartGoogleActivityFlag.toInt())) {
			// 当前应用发起的请求
			if (resultCode == Activity.RESULT_OK) {
				// 请求响应成功
				if (data != null) {
					let task = GoogleSignIn.getSignedInAccountFromIntent(data);
					let googleAccount = task.getResult(UTSAndroid.getJavaClass(ApiException));
					let loginResult = wrapLoginResult(googleAccount)
					options.success?.(loginResult);
					options.complete?.(loginResult);
					/**
					 * bug fix: onActivityResult 可能触发多次，这里手动屏蔽
					 */
					options.success = null;
					options.complete = null;
					console.log("success happen ==============")
				}else{
					// GMS返回数据错误
					const err = new GoogleLoginFailImpl(9010002);
					options.fail?.(err)
					options.complete?.(err)
				}
			}else{
				// 当前设备没有安装安装GMS?
				const err = new GoogleLoginFailImpl(9010001);
				options.fail?.(err)
				options.complete?.(err)
			}
		}
		
		
	});
	
	/**
	 * 发起登录intent
	 */
	let signInIntent = mGoogleSignInClient!.getSignInIntent();
	UTSAndroid.getUniActivity()!.startActivityForResult(signInIntent, StartGoogleActivityFlag.toInt());

}

