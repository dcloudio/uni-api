import {
    OpenAppAuthorizeSetting,
    OpenAppAuthorizeSettingOptions,
    OpenAppAuthorizeSettingSuccess
} from '../interface.uts'
import {
    API_OPEN_APP_AUTHORIZE_SETTING
} from '../protocol.uts'
import Want from '@ohos.app.ability.Want'
import bundleManager from '@ohos.bundle.bundleManager';
import common from '@ohos.app.ability.common';
import {
    getAbilityContext
} from '@dcloudio/uni-runtime'

export {
    OpenAppAuthorizeSetting,
    OpenAppAuthorizeSettingOptions,
    OpenAppAuthorizeSettingSuccess
}

export const openAppAuthorizeSetting: OpenAppAuthorizeSetting = defineAsyncApi<OpenAppAuthorizeSettingOptions, OpenAppAuthorizeSettingSuccess>(
    API_OPEN_APP_AUTHORIZE_SETTING,
    function openAppAuthorizeSetting(options: OpenAppAuthorizeSettingOptions, exec: ApiExecutor<OpenAppAuthorizeSettingSuccess>) {
        const want: Want = {
            bundleName: 'com.huawei.hmos.settings',
            abilityName: 'com.huawei.hmos.settings.MainAbility',
            uri: 'application_info_entry',
            parameters: {
                pushParams: bundleManager.getBundleInfoForSelfSync(bundleManager.BundleFlag.GET_BUNDLE_INFO_DEFAULT).name
            }
        } as Want
        const context = getAbilityContext() as common.UIAbilityContext
        context.startAbility(want).then(() => {
            exec.resolve({
                errMsg: ''
            } as OpenAppAuthorizeSettingSuccess)
        }, (err: Error) => {
            exec.reject(err.message)
        })
    }
) as OpenAppAuthorizeSetting
