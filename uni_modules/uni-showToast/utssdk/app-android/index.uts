import { getUniActivity } from "io.dcloud.uts.android";
import Gravity from 'android.view.Gravity';
import Toast from "android.widget.Toast";
import { WaitingView } from "./WaitingView.uts"

type ToastStyle = {
	title: string,
	icon?: string,
	image?: string,
	mask?: boolean,
	duration?: number,
	position?: string,
	style?: string,
	success?: (res: UTSJSONObject) => void,
	fail?: (res: UTSJSONObject) => void,
	complete?: (res: UTSJSONObject) => void
}

let timeout: number | null = null
let toast: WaitingView | null = null
let toastType: string | null = null

export function showToast(style: ToastStyle) {
	makeToast(style, 'toast', 'showToast')
}

export function hideToast() {
	closeToast("toast")
}

export function showLoading(loadingStyle: ToastStyle) {
	loadingStyle.icon = "loading"
	loadingStyle.image = null
	loadingStyle.position = ""
	makeToast(loadingStyle, 'loading', 'showLoading')
}

export function hideLoading() {
	closeToast("loading")
}

function closeToast(type: string | null) {
	if (type != null && type !== toastType) {
		return
	}
	if (timeout != null && (timeout as number) > 0) {
		clearTimeout(timeout as number)
		timeout = null
	}
	if (toast != null) {
		(toast as WaitingView).close()
		toast = null
	}
	toastType = null
}

function makeToast(style: ToastStyle, type: string, errMsg: string) {
	closeToast(null)
	if (style.title == null || style.title.length == 0) {
		style.fail?.({ errMsg: (errMsg + ':title is null') })
		style.complete?.({ errMsg: (errMsg + ':title is null') })
	} else {
		toastType = type
		if (["top", "center", "bottom"].indexOf(style.position) >= 0) {
			let toast = Toast.makeText(getUniActivity(), style.title, Toast.LENGTH_SHORT);
			switch (style.position) {
				case "top": {
					toast.setGravity(Gravity.TOP, 0, 0)
					break
				}
				case "center": {
					toast.setGravity(Gravity.CENTER, 0, 0)
					break
				}
				case "bottom": {
					toast.setGravity(Gravity.BOTTOM, 0, 0)
					break
				}
			}
			toast.show()
		} else {
			let options = {};
			let icon = style.icon
			if (icon == null || ["success", "loading", "error", "none"].indexOf(icon) < 0) {
				icon = "success"
			}
			options = {
				name: style.title,
				modal: style.mask,
				back: 'transmit',
				padding: '10',
				size: '16' // 固定字体大小
			}
			if (style.image == null && icon == "none") {
				options["loading"] = {
					display: "none"
				}
			} else {
				options["width"] = "140"
				options["height"] = "112"
			}
			if (style.image != null) {
				options["loading"] = {
					display: "block",
					height: "55",
					icon: style.image
				}
			} else {
				if (['success', 'error'].indexOf(icon) >= 0) {
					options["loading"] = {
						display: 'block',
						height: '55',
						icon: icon === "success" ? "successIcon" : "errorIcon"
					}
				}
			}
			console.log(JSON.stringify(options))
			const alert = new WaitingView(getUniActivity(), options)
			toast = alert
			alert.showWaiting()
			let duration: number | null = style.duration
			if (duration == null || duration <= 0) {
				duration = 1500
			}
			if (type !== "loading") {
				timeout = setTimeout(() => {
					alert.close()
				}, duration)
			}
			style.success?.({ errMsg: (errMsg + ':ok') })
			style.complete?.({ errMsg: (errMsg + ':ok') })
		}
	}
}